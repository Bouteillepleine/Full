name: One+ build Susf4Ksu (FullLTO)

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DEBIAN_FRONTEND: noninteractive
  ROOT_DIR_PREFIX: "OP13r-A15"
  BRANCH: "android14-6.1"
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build-release:
    runs-on: ubuntu-latest
    timeout-minutes: 120  # Set timeout to 2 hours to prevent premature termination
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      # Caching Toolchain and Build Outputs
      - name: Cache Toolchain
        uses: actions/cache@v2
        with:
          path: ~/.cache/ccache
          key: ${{ runner.os }}-ccache-${{ hashFiles('**/*.cpp') }}
          restore-keys: |
            ${{ runner.os }}-ccache-

      - name: Cache Kernel Build Output
        uses: actions/cache@v2
        with:
          path: builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus13r_v/kernel_platform/out
          key: ${{ runner.os }}-kernel-${{ hashFiles('**/*.c') }}
          restore-keys: |
            ${{ runner.os }}-kernel-

      # Free disk space before starting the build
      - name: Free Disk Space
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq curl
          curl -fsSL https://raw.githubusercontent.com/kou/arrow/e49d8ae15583ceff03237571569099a6ad62be32/ci/scripts/util_free_space.sh | bash

      # Setup Build Environment
      - name: Setup Build Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            clang-15 lld-15 llvm-15 \
            python3-pip curl git zip unzip gcc g++ make ninja-build file \
            bc bison flex libssl-dev libelf-dev wget build-essential \
            python3-dev python3-setuptools rsync ccache cmake libdw-dev zlib1g-dev
          sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-15 100
          sudo update-alternatives --install /usr/bin/lld lld /usr/bin/lld-15 100
          sudo update-alternatives --install /usr/bin/ld.lld ld.lld /usr/bin/ld.lld-15 100

      # Clone Repositories with Retry Logic
      - name: Clone Repositories
        run: |
          repos=(
            "https://github.com/Kernel-SU/AnyKernel3 --depth=1"
            "https://gitlab.com/simonpunk/susfs4ksu.git -b gki-android14-6.1"
            "https://github.com/WildPlusKernel/kernel_patches.git"
          )
          for repo in "${repos[@]}"; do
            for i in {1..3}; do
              git clone $repo && break || { echo "Retrying..."; sleep 10; }
            done
          done

      # Setup Kernel Source and KernelSU
      - name: Setup Kernel Source
        working-directory: builds/${{ env.ROOT_DIR }}
        run: |
          mkdir -p kernel_platform/oneplus13r_v
          cd kernel_platform/oneplus13r_v
          repo init -u https://github.com/OnePlusOSS/kernel_manifest.git -b oneplus/sm8650 -m oneplus_13r.xml --depth=1 || { echo "Failed to initialize repo"; exit 1; }
          repo sync -c -j$(nproc --all) --force-sync --no-clone-bundle --no-tags || { echo "Failed to sync repo"; exit 1; }

      - name: Setup KernelSU
        working-directory: builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus13r_v/kernel_platform
        run: |
          curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next/kernel/setup.sh" | bash -s next
          git submodule update --init --recursive
          cd KernelSU-Next/kernel
          KSU_VERSION=$(expr $(/usr/bin/git rev-list --count HEAD) "+" 10200)
          echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
          sed -i "s/DKSU_VERSION=11998/DKSU_VERSION=${KSU_VERSION}/" Makefile

      # Setup SUSFS
      - name: Setup SUSFS
        working-directory: builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus13r_v/kernel_platform
        run: |
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-android14-6.1
          git clone https://github.com/WildPlusKernel/kernel_patches.git
          cp susfs4ksu/kernel_patches/50_add_susfs_in_gki-android14-6.1.patch ./common/
          cp kernel_patches/next/0001-kernel-patch-susfs-v1.5.5-to-KernelSU-Next-v1.0.5.patch ./KernelSU-Next/
          cp kernel_patches/next/syscall_hooks.patch ./common/
          cp susfs4ksu/kernel_patches/fs/* ./common/fs/
          cp susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/
          cd ./KernelSU-Next
          patch -p1 < 0001-kernel-patch-susfs-v1.5.5-to-KernelSU-Next-v1.0.5.patch || true
          cd ../common
          patch -p1 < 50_add_susfs_in_gki-android14-6.1.patch || true
          if [ -f kernel_patches/69_hide_stuff.patch ]; then
            cp kernel_patches/69_hide_stuff.patch ./ && patch -p1 -F 3 < 69_hide_stuff.patch || true
          fi
          patch -p1 -F 3 < syscall_hooks.patch || true

      # Configure Kernel
      - name: Configure Kernel
        working-directory: builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus13r_v/kernel_platform
        run: |
          set -e
          CONFIGS=( 
            "CONFIG_LTO_CLANG=y"
            "CONFIG_THINLTO=n"
            "CONFIG_LTO_NONE=n"
            "CONFIG_LD_DEAD_CODE_DATA_ELIMINATION=y"
            "CONFIG_KSU=y"
            "CONFIG_KSU_WITH_KPROBES=n"
            "CONFIG_KSU_SUSFS=y"
            "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y"
            "CONFIG_KSU_SUSFS_SUS_PATH=y"
            "CONFIG_KSU_SUSFS_SUS_MOUNT=y"
            "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y"
            "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y"
            "CONFIG_KSU_SUSFS_SUS_KSTAT=y"
            "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n"
            "CONFIG_KSU_SUSFS_TRY_UMOUNT=y"
            "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y"
            "CONFIG_KSU_SUSFS_SPOOF_UNAME=y"
            "CONFIG_KSU_SUSFS_ENABLE_LOG=y"
            "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y"
            "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y"
            "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y"
            "CONFIG_KSU_SUSFS_SUS_SU=n"
            "CONFIG_TMPFS_XATTR=y"
            "CONFIG_TMPFS_POSIX_ACL=y"
            "CONFIG_IP_NF_TARGET_TTL=y"
            "CONFIG_IP6_NF_TARGET_HL=y"
            "CONFIG_IP6_NF_MATCH_HL=y"
            "CONFIG_SCHED_CLASS_EXT=y"
            "CONFIG_SMP=y"
            "CONFIG_CPU_FREQ_GOV_SCHEDUTIL=y"
            "CONFIG_MSM_PERFORMANCE=y"
            "CONFIG_NO_HZ_IDLE=y"
            "CONFIG_PM_SLEEP_SMP=y"
            "CONFIG_ENERGY_MODEL=y"
            "CONFIG_PM_AUTOSLEEP=y"
            "CONFIG_DEBUG_KERNEL=n"
            "CONFIG_DYNAMIC_DEBUG=n"
            "CONFIG_DEBUG_INFO=n"
          )
          for CONFIG in "${CONFIGS[@]}"; do
            echo "$CONFIG" >> ./common/arch/arm64/configs/gki_defconfig
          done
          sed -i '2s/check_defconfig//' ./common/build.config.gki

      # Build Kernel with Full LTO
      - name: Build Kernel with Full LTO
        working-directory: builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus13r_v/
        run: |
          cd kernel_platform
          mkdir -p out
          export PATH="/usr/lib/ccache:$PATH"
          export LLVM=1
          export LLVM_IAS=1
          export CLANG_TRIPLE="aarch64-linux-gnu-"
          export CROSS_COMPILE="aarch64-linux-gnu-"
          export CROSS_COMPILE_COMPAT="arm-linux-gnueabi-"
          ./build_with_bazel.py \
            -t pineapple \
            gki \
            --jobs=$(nproc --all) \
            --verbose_failures \
            --config=stamp \
            --user_kmi_symbol_lists=//msm-kernel:android/abi_gki_aarch64_qcom \
            --ignore_missing_projects \
            --lto=full \
            -o "$(pwd)/out"

      # Create ZIP Package for Kernel
      - name: Create ZIP Package
        working-directory: builds/${{ env.ROOT_DIR }}/AnyKernel3
        run: |
          cp kernel_platform/oneplus13r_v/kernel_platform/out/dist/Image AnyKernel3/Image
          zip -r "OP13r
